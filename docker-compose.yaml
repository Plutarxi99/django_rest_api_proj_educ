version: '3.10'

services:
  redis:
    image: redis
    env_file:
      - .env
    ports:
      - '6380:6379'

  db:
    image: postgres
#    env_file:
#      - .env
    environment:
      POSTGRES_PASSWORD: ${PASSWORD_BD?error}
      PGDATA: ${PGDATA:-/var/lib/postgresql/data/pgdata}
    volumes:
      - pg_data:/var/lib/postgresql/data/pgdata
    ports:
      - '5433:5432'
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres"] # команда для проверки здоровья
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build: .
    tty: true
    env_file:
      - .env
#    command: python3 manage.py migrate && python3 manage.py runserver 0.0.0.0:8080
    command: python3 manage.py runserver 0.0.0.0:8000
    ports:
      - '8080:8000'
    volumes:
      - .:/code
    depends_on:
      db:
        condition: service_healthy

  celery:
    build: .
    env_file:
      - .env
    tty: true
    command: celery -A config worker -l INFO
    depends_on:
      - redis
      - app

  celery_beat:
    build: .
    env_file:
      - .env
    restart: always
    tty: true
    command: celery -A config beat -l INFO -S django
    depends_on:
      - redis
      - app


volumes:
  pg_data: